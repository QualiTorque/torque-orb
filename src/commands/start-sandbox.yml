description: |
  Launches Torque Sandbox from a blueprint
parameters:
  torque-token:
    description: |
      Name of environment variable containing Torque API Token
    type: env_var_name
    default: TORQUE_TOKEN
  torque-url:
    description: |
      URL of Torque Server
    type: env_var_name
    default: TORQUE_SERVER
  space:
    description: |
      Name of Torque space
    type: env_var_name
    default: TORQUE_SPACE
  blueprint:
    description: |
      Name of the blueprint used for creating a Torque sandbox.
    type: string
    default: ""
  sandbox-name:
    description: |
      Name of sandbox.
    type: string
    default: "circleci-orb-sandbox"
  sandbox-id-variable:
    description: |
      The name of environment variable which will be used to store sandbox id
    type: string
    default: "SANDBOX_ID"
  sandbox-details-variable:
    description: |
      The name of environment variable which will be used to store full information about sandbox
    type: string
    default: "SANDBOX_DETAILS"
  inputs:
    description: |
      String with the list of inputs.
      Json format {'key1': 'value1', ..., 'keyN': 'valueN'}
    type: string
    default: "{}"
  timeout:
    description: >
      Timeout for this step in minutes. If the sandbox will not be ready when the timeout is reached,
      Torque will abort the deployment
    type: integer
    default: 30
  duration:
    description: |
      Duration (ISO 8601), after which Torque will stop the deployment
    type: string
    default: "PT2H"
steps:
- run:
    name: Deploy Torque Sandbox
    command: |
      PAYLOAD=(
        "{
           'sandbox_name':'<<parameters.sandbox-name>>-${CIRCLE_BUILD_NUM}',
           'blueprint_name':'<<parameters.blueprint>>',
           'duration': '<<parameters.duration>>',
           'inputs': <<parameters.inputs>>,
           'automation': true
        }"
      )
      echo $PAYLOAD

      status_code=`curl --write-out "%{http_code}\n" --output result.txt \
              --silent -X POST "$<<parameters.torque-url>>/api/spaces/$<<parameters.space>>/environments" \
              --header "User-Agent: Torque-Plugin-CirceCI/1.1.X" \
              --header "accept: text/plain" \
              --header "Authorization: bearer $<<parameters.torque-token>>" \
              --header "Content-Type:  application/json" -d "$PAYLOAD"` || exit 1

      if [[ $status_code -ge 400 ]]; then
        echo "Unable to start sandbox. Details: $(cat result.txt)"
        exit 1
      else
        sb=`cat result.txt | sed 's/.*:"//' | sed 's/".*//'`
        echo "Sandbox with id $sb has been started"
        echo "export <<parameters.sandbox-id-variable>>=$sb" >> $BASH_ENV
      fi
- run:
    name: Wait For Sandbox
    command: |
      echo "Waiting for sandbox $<<parameters.sandbox-id-variable>>"
      timeout=`date --date="<<parameters.timeout>> minutes" +%s`
      status=''
      prev_status=''
      while [[ $(date +%s) -le $timeout ]]; do
        url="$<<parameters.torque-url>>/api/spaces/$<<parameters.space>>/environments/$<<parameters.sandbox-id-variable>>"
        echo "****"
        details=`curl --silent \
           -X GET "${url}" \
           --header "User-Agent: Torque-Plugin-CirceCI/1.1.X" \
           --header "accept: text/plain" \
           --header "Authorization: bearer $<<parameters.torque-token>>"`
        status=`echo $details | sed  "s/.*\"computed_status\":\"//" | sed "s/\".*//"`
        if [[ $status != $prev_status ]]; then
          echo "Status is $status"
          prev_status=$status
        fi
        if [[ $status == "Active" ]]; then
          break
        fi
        if [[ $status == "Ended" ]]; then
          echo "Error: sandbox is ended"
        exit 1
        fi
        if [[ $status == "Active With Error" ]]; then
          echo "Error: sandbox is active with error!"
          exit 1
        fi
        sleep 20
      done
      if [[ $status != "Active" ]]; then
        echo "Timeout was reached or Sandbox is active with errors"
        exit 1
      fi

      echo "export <<parameters.sandbox-details-variable>>=$details" >> $BASH_ENV
